from django.db import models


# Через эти классы мы также можем взаимодействовать с таблицами из БД.
# Создаем таблицу для новостей на главной странице
class News(models.Model):
    # перечисляем поля (атрибуты) таблицы
    # заголовок новости
    # verbose_name - название поля в админ панели
    title = models.CharField(max_length=60, verbose_name='Заголовок новости')
    # текст новости
    text = models.TextField(max_length=1300, verbose_name='Текст новости')

    # создаем класс, чтобы поменять некоторые данные (например, название таблицы в БД, в админ панели)
    class Meta:
        # обычно таблицы называют в единственном числе (здесь, как она будет отображаться в БД)
        db_table = 'news'
        # как будет отображаться в админ панели (в единственном числе)
        verbose_name = 'Новость'
        # в множественном числе
        verbose_name_plural = 'Новости'

    # метод перегрузки для вывода объекта (изменяем отображение заголовка каждой новости в админ панели)
    def __str__(self):
        return self.title


# Создаем таблицу для истории компании
class HistoryCompany(models.Model):
    # перечисляем поля (атрибуты) таблицы
    # verbose_name - название поля в админ панели
    # первый абзац истории
    paragraph_one = models.TextField(max_length=700, verbose_name='Первый абзац')
    # второй абзац истории
    paragraph_two = models.TextField(max_length=500, verbose_name='Второй абзац')
    # видео
    video = models.FileField(upload_to='videos/', verbose_name='Видео', blank=True, null=True)

    # создаем класс, чтобы поменять некоторые данные (например, название таблицы в БД, в админ панели)
    class Meta:
        # обычно таблицы называют в единственном числе (здесь, как она будет отображаться в БД)
        db_table = 'history_company'
        # как будет отображаться в админ панели (в единственном числе)
        verbose_name = 'Историю компании'
        # в множественном числе
        verbose_name_plural = 'История компании'

    # метод перегрузки для вывода объекта (изменяем отображение заголовка каждой новости в админ панели)
    def __str__(self):
        return 'История компании'
